version: '3.8'

services:
  
  backend:
    build:
      context: ./backend  
    container_name: mylearnapp-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/${DB_NAME:-mylearnapp}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL_ID=${GEMINI_MODEL_ID:-gemini-2.0-flash}
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - mylearnapp-network
    restart: unless-stopped

 
  frontend:
    build:
      context: ./frontend
    container_name: mylearnapp-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - mylearnapp-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mylearnapp-mysql
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME:-mylearnapp}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_CHARSET=utf8mb4
    env_file:
      - .env
    networks:
      - mylearnapp-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

volumes:
  mysql-data:
    name: mylearnapp-mysql-data

networks:
  mylearnapp-network:
    name: mylearnapp-network